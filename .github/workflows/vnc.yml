name: Ubuntu VNC

on:
  workflow_dispatch:
  # schedule:
  #   - cron: 0 20 * * *

env:
  COON_CLI_URL: ${{ secrets.COON_CLI_URL }}
  ROOT_PASSWORD: ${{ secrets.ROOT_PASSWORD }}
  VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
  FRP_SERVER: ${{ secrets.FRP_SERVER }}
  FRP_TOKEN: ${{ secrets.FRP_TOKEN }}
  OPENP2P_TOKEN: ${{ secrets.OPENP2P_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SCRIPT_DIR: ./.github/workflows/scripts
      TIMEZONE: Asia/Shanghai
    steps:
    - uses: actions/checkout@master
    - name: Initialize
      run: |
        [ -z "$ROOT_PASSWORD" ] && echo "ROOT_PASSWORD=_password_" >> $GITHUB_ENV
        [ -z "${{ env.TIMEZONE }}" ] || sudo -E timedatectl set-timezone "${{ env.TIMEZONE }}"
        sudo apt-get update && sudo apt-get install wget curl supervisor jq inotify-tools
    - name: coon-cli
      run: |
        sh $SCRIPT_DIR/coon-cli.sh
    # - name: Cache Files
    #   uses: actions/cache@v3
    #   env:
    #     cache-name: cache-files
    #   with:
    #     path: |
    #       /home/runner/work
    #     key: ${{ runner.os }}-build-${{ env.cache-name }}
    #     restore-keys: |
    #       ${{ runner.os }}-build-
    - name: Change Root Password / Restart SSH
      run: |
        sh $SCRIPT_DIR/ssh.sh
      if: ${{ env.ROOT_PASSWORD != '' }}
    - name: Connect to OpenP2P
      run: |
        sh $SCRIPT_DIR/openp2p.sh
      if: ${{ env.OPENP2P_TOKEN != '' }}
    # - name: Connect to FRP Server
    #   env:
    #     FRP_PORTS: 5901:15910+,22:10082+
    #   run: |
    #     sh $SCRIPT_DIR/frp.sh
    #   if: ${{ env.FRP_SERVER != '' }}
    - name: VNC Server
      run: |
        sh $SCRIPT_DIR/vnc.sh
      if: ${{ env.VNC_PASSWORD != '' }}
    - name: Delete Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 0
    - name: Wait
      run: |
        sh $SCRIPT_DIR/wait.sh
    # - uses: actions/upload-artifact@master
    #   with:
    #     name: Upload
    #     path: /home/runner/data
    #     env-url: DOWNLOAD_URL
    # - name: Use URL for something
    #   run: echo "${{ env.DOWNLOAD_URL }}"
